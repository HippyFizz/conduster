# Generated by Django 2.0.1 on 2018-02-26 11:10

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    FieldMapping = apps.get_model("collector", "FieldMapping")
    Field = apps.get_model("collector", "Field")
    fields = {}
    for mapping in FieldMapping.objects.all():
        if mapping.target_name not in fields:
            fields[mapping.target_name] = Field.objects.create(name=mapping.target_name)
        mapping.target_field = fields[mapping.target_name]
        mapping.save()


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('collector', '0034_fill_test_leads'),
    ]

    operations = [
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='fieldmapping',
            name='target_field',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fields_mapping', to='collector.Field')
        ),
        migrations.RunPython(forwards_func, reverse_func),
        migrations.AlterField(
            model_name='fieldmapping',
            name='target_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fields_mapping', to='collector.Field')
        ),
        migrations.RemoveField(
            model_name='fieldmapping',
            name='target_name',
        ),
        migrations.AlterField(
            model_name='leadfield',
            name='field_name',
            field=models.CharField(max_length=100),
        ),
    ]
