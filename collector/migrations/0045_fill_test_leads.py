# Generated by Django 2.0.1 on 2018-03-21 11:54

from django.db import migrations
from django.contrib.auth.hashers import make_password

from collector.management.commands.fill_test_leads import fill_test_leads


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    User = apps.get_model("auth", "User")
    db_alias = schema_editor.connection.alias
    user, _ = User.objects.using(db_alias).get_or_create(
        username='root@conduster.com',
        defaults={
            'password': make_password('random64'),
            'email': 'root@conduster.com',
            'is_superuser': True,
            'is_staff': True,
            'is_active': True
        }
    )
    user2, _ = User.objects.using(db_alias).get_or_create(
        username='test2@conduster.com',
        defaults={
            'password': make_password('123456'),
            'email': 'test2@conduster.com',
            'is_superuser': False,
            'is_staff': False,
            'is_active': True
        }
    )

    user3, _ = User.objects.using(db_alias).get_or_create(
        username='test3@conduster.com',
        defaults={
            'password': make_password('123456'),
            'email': 'test3@conduster.com',
            'is_superuser': False,
            'is_staff': False,
            'is_active': True
        }
    )
    Profile = apps.get_model("profiles", "Profile")
    profile, _ = Profile.objects.using(db_alias).get_or_create(
        user=user,
        defaults={'company_name': 'Conduster'}
    )
    Project = apps.get_model("collector", "Project")
    project, _ = Project.objects.using(db_alias).get_or_create(
        user=user,
        title='Тестовый проект'
    )
    project2, _ = Project.objects.using(db_alias).get_or_create(
        user=user2,
        title='Тестовый проект 2'
    )
    Pixel = apps.get_model("collector", "Pixel")
    pixel, _ = Pixel.objects.using(db_alias).get_or_create(
        project=project,
        title='Тестовая форма'
    )
    pixel2, _ = Pixel.objects.using(db_alias).get_or_create(
        project=project2,
        title='Тестовая форма 2'
    )
    Lead = apps.get_model("collector", "Lead")
    Audit = apps.get_model("audit", "Audit")
    fill_test_leads(pixel.id, Lead.objects.using(db_alias), Lead, [user, user2, user3], Audit)
    fill_test_leads(pixel2.id, Lead.objects.using(db_alias), Lead, [user, user2, user3], Audit)


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('collector', '0044_traffic_channels'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
