"""
Django settings for condust project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# site id for sites framework
SITE_ID = 1

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static dir path
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bb+@&pd12zevl56luh12f(==g@io5+exi)0glc=t%x!i3su@+o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'dev-api.conduster.com',
    '35.194.208.129',
    'conduster.com',
    '172.104.155.112',
    'api.conduster.com',
    '127.0.0.1',
    'localhost',
]

# TODO пока уберём
# if os.environ.get('CODE_SHIT'):
#     ALLOWED_HOSTS = ["*"]
# else:
#     ALLOWED_HOSTS = [
#         'dev-api.conduster.com',
#         '35.194.208.129',
#         'conduster.com',
#         '172.104.155.112',
#         'api.conduster.com'
#     ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_extensions',
    'rest_framework',
    'graphene_django',
    'corsheaders',
    'django_countries',
    'django_cron',
    'profiles',
    'collector',
    'xflatpages',
    'ckeditor',
    'audit',
    'condust'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'condust.middleware.LocaleMiddleware',
    'profiles.middleware.JWTMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'condust.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

CKEDITOR_CONFIGS = {
    'default': {
        'extraPlugins': 'uploadcare',
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft',
             'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['Uploadcare'],
            ['RemoveFormat', 'Source']
        ]
    }
}

WSGI_APPLICATION = 'condust.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
import dj_database_url
DATABASES = {'default': {}}
DATABASES['default'] = dj_database_url.config(conn_max_age=600)

# Graphene schema
GRAPHENE = {
    'SCHEMA': 'condust.schema.schema'
}

# Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'JWT_VERIFY_EXPIRATION': False
}

AUTHENTICATION_BACKENDS = ('profiles.backends.CaseInsensitiveModelBackend',)

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ('http://localhost:3000',)

from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = list(default_headers)
CORS_ALLOW_HEADERS.append('locale')

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
from django.utils.translation import ugettext_lazy as _

LANGUAGES = [
    ('en_US', _('English')),
    ('ru_RU', _('Russian')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]

LANGUAGE_CODE = 'en-US'
# LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

ACTIVATION_SALT = '09873459=^%#@#q93v30)((45'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

import datetime

JWT_VERIFY_EXPIRATION = False
JWT_EXPIRATION_DELTA = datetime.timedelta(days=300)

DEFAULT_FROM_EMAIL = EMAIL_FROM = 'no-reply@conduster.com'

EMAIL_HOST = 'smtp-relay.sendinblue.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'no-reply@conduster.com'
EMAIL_HOST_PASSWORD = 'E7y8UCsM3TF2ZISJ'

# meta stat dir
META_STAT_ROOT = '/storage/meta_stat'

if DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'default': {
                'format': '%(asctime)s %(process)d %(name)s [%(levelname)s] %(message)s'
            }
        },
        'handlers': {
            'console': {
                'level': 'DEBUG',
                #             'level': 'INFO',
                'class': 'logging.StreamHandler',
                'formatter': 'default'
            }
        },
        'loggers': {
            'django.db': {
                'handlers': ['console'],
                'level': 'DEBUG',
            },
            'collector': {
                'handlers': ['console'],
                'level': 'DEBUG',
            },
        }
    }
#     # Documentation: http://djfarrelly.github.io/MailDev/
#     # Install maildev (npm install) and run smtp server (./node_modules/.bin/maildev)
#     # Open http://localhost:1080/ in browser
#     EMAIL_HOST = 'localhost'
#     EMAIL_PORT = '1025'
#     EMAIL_USE_TLS = False
#     EMAIL_HOST_USER = ''
#     EMAIL_HOST_PASSWORD = ''

GEOIP_PATH = os.path.join(BASE_DIR, 'geo_data')

CRON_CLASSES = [
    "collector.cron.UpdateGeoData",
    "collector.cron.FillLeads",
    "collector.cron.FillIpStat",
]
